summary(wine)
wine = read.csv("Wine.csv")
str(wine)
summary(wine)
plot(wine$AGST, wine$Price)
abline(h = mean(wine$Price), col = "red")
model1 = lm(Price ~ AGST, data = wine)
summary(model1)
View(model1)
plot(wine$AGST, wine$Price)
abline(h = mean(wine$Price), col = "red")
abline(model1, col = "green")
plot(wine$AGST, wine$Price)
abline(h = mean(wine$Price), col = "red")
abline(model1, col = "darkblue")
SSE1 = sum(model1$residuals^2)
SSE1
model1$residuals
model1$residuals^2
SSE1 = sum(model1$residuals^2)
SSE1
sqrt(SSE1/nrow(wine))
SSE2 = sum(model2$residuals^2)
model3 = lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data = wine)
summary(model3)
model2 = lm(Price ~ AGST + HarvestRain, data = wine)
summary(model2)
cor(wine)
plot(wine$Age, wine$FrancePop)
model4 = lm(Price ~ AGST + HarvestRain + WinterRain + Age, data = wine)
summary(model4)
SSE = sum((wineTest$Price - predictTest)^2)
wineTest = read.csv("Wine_Test.csv")
str(wineTest)
predictTest = predict(model4, newdata = wineTest)
predictTest
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
train = read.csv("Assignment_Linear_Regression_Data_Train.csv")
train = read.csv("Assignment_Linear_Regression_Data_Train.csv")
train
# load csv
train = read.csv("Assignment_Linear_Regression_Data_Train.csv")
# find the avg of the table
summary(train)
# load csv
train = read.csv("Assignment_Linear_Regression_Data_Train.csv")
# find the avg of the table
summary(train)
male= train$Gender$male
# load csv
train = read.csv("Assignment_Linear_Regression_Data_Train.csv")
# find the avg of the table
summary(train)
male= train$Gender
# load csv
train = read.csv("Assignment_Linear_Regression_Data_Train.csv")
# find the avg of the table
summary(train)
df <-data.frame(Q1=c(train$Gender))
# load csv
train = read.csv("Assignment_Linear_Regression_Data_Train.csv")
# find the avg of the table
summary(train)
df <-data.frame(Q1=c(train$Gender))
#install the package
library(dplyr)
# load csv
train = read.csv("Assignment_Linear_Regression_Data_Train.csv")
# find the avg of the table
summary(train)
df <-data.frame(Q1=c(train$Gender))
#install the package
library(dplyr)
# load csv
train = read.csv("Assignment_Linear_Regression_Data_Train.csv")
# find the avg of the table
summary(train)
df <-data.frame(Q1=c(train$Gender))
df %>% count(Q1)
#install the package
library(dplyr)
install.packages("dplyr")
#install the package
library(dplyr)
# load csv
train = read.csv("Assignment_Linear_Regression_Data_Train.csv")
# find the avg of the table
summary(train)
df <-data.frame(Q1=c(train$Gender))
df %>% count(Q1)
model1 = lm(LOS~HearRate, data="train")
model1 = lm(LOS~HearRate, data= train)
model1 = lm(LOS~HeartRate, data = train)
summary(model1)
model1 = lm(LOS~Temperature+ RespirationRate+ HeartRate + SystolicBP + DiastolicBP + SpO2, data = train)
summary(model1)
model1 = lm(LOS~Age + Gender + Race + Temperature+ RespirationRate+ HeartRate + SystolicBP + DiastolicBP + SpO2 + Haemoglobin + NumWBC + ArterialpO2 + Creatinine + Urea + GCS , data = train)
model1 = lm(LOS~Age + Gender + Race + Temperature+ RespirationRate+ HeartRate + SystolicBP + DiastolicBP + SpO2 + Haemoglobin + NumWBC + ArterialpO2 + Creatinine + Urea + GCS , data = train)
model1 = lm(LOS~Age + Gender + Race + Temperature+ RespirationRate+ HeartRate + SystolicBP + DiastolicBP + SpO2 + Haemoglobin + NumWBC + ArterialpO2 + Creatinine + Urea + GCS , data = train)
model1
model1 = lm(LOS~Temperature+ RespirationRate+ HeartRate + SystolicBP + DiastolicBP + SpO2, data = train)
summary(model1)
model2 = lm(LOS~Age + Gender + Race + Temperature+ RespirationRate+ HeartRate + SystolicBP + DiastolicBP + SpO2 + Haemoglobin + NumWBC + ArterialpO2 + Creatinine + Urea + GCS , data = train)
summary(model2)
model2 = lm(LOS~Age + Gender + Race + Temperature+ RespirationRate+ HeartRate + SystolicBP + DiastolicBP + SpO2 + Haemoglobin + NumWBC + ArterialpO2 + Creatinine + Urea + GCS , data = train)
summary(model2)
model3 = lm(LOS~ ArterialpO2 + Creatinine + Urea + GCS , data = train)
summary(model3)
test = read.csv("Assignment_Linear_Regression_Data_Test.csv")
str(test)
model5 = lm(Price ~ AGST + HarvestRain + Age, data = wine)
test = read.csv("Assignment_Linear_Regression_Data_Test.csv")
str(test)
predictTest = predict(model3, newdata = test)
predictTest
test = read.csv("Assignment_Linear_Regression_Data_Test.csv")
str(test)
predictTest = predict(model3, newdata = test)
SSE = sum((test$LOS - predictTest)^2)
SST = sum((test$LOS - mean(train$LOS))^2)
1 - SSE/SST
test = read.csv("Assignment_Linear_Regression_Data_Test.csv")
str(test)
predictTest = predict(model2, newdata = test)
SSE = sum((test$LOS - predictTest)^2)
SST = sum((test$LOS - mean(train$LOS))^2)
1 - SSE/SST
test = read.csv("Assignment_Linear_Regression_Data_Test.csv")
str(test)
predictTest = predict(model1, newdata = test)
SSE = sum((test$LOS - predictTest)^2)
SST = sum((test$LOS - mean(train$LOS))^2)
1 - SSE/SST
test = read.csv("Assignment_Linear_Regression_Data_Test.csv")
str(test)
#how we count for
predictTest2 = predict(model2, newdata = test)
SSE2 = sum((test$LOS - predictTest2)^2)
SST2 = sum((test$LOS - mean(train$LOS))^2)
R2 = (1 - SSE2/SST2)
# the out-of-sample R^2
R2
test = read.csv("Assignment_Linear_Regression_Data_Test.csv")
str(test)
#count for all variables
predictTest2 = predict(model2, newdata = test)
SSE2 = sum((test$LOS - predictTest2)^2)
SST2 = sum((test$LOS - mean(train$LOS))^2)
R2 = (1 - SSE2/SST2)
# the out-of-sample R^2
R2
#count for only vital signs
predictTest1 = predict(model1, newdata = test)
SSE1 = sum((test$LOS - predictTest1)^2)
SST1 = sum((test$LOS - mean(train$LOS))^2)
R1 = (1 - SSE1/SST1)
# the out-of-sample R^2
R1
test = read.csv("Assignment_Linear_Regression_Data_Test.csv")
str(test)
#count for all variables
predictTest2 = predict(model2, newdata = test)
SSE2 = sum((test$LOS - predictTest2)^2)
SST2 = sum((test$LOS - mean(train$LOS))^2)
R2 = (1 - SSE2/SST2)
# the out-of-sample R^2
R2
#count for only vital signs
predictTest1 = predict(model3, newdata = test)
SSE1 = sum((test$LOS - predictTest1)^2)
SST1 = sum((test$LOS - mean(train$LOS))^2)
R1 = (1 - SSE1/SST1)
# the out-of-sample R^2
R1
#install the package
library(dplyr)
# load csv
train = read.csv("Assignment_Linear_Regression_Data_Train.csv")
# find the avg of the table
summary(train)
df <-data.frame(Q1=c(train$Gender))
df %>% count(Q1)
#another way of doing calculation
male <- subset(train, Gender="Male")
precentage_male = nrow(male)/nrow(train)
precentage_male
#install the package
library(dplyr)
# load csv
train = read.csv("Assignment_Linear_Regression_Data_Train.csv")
# find the avg of the table
summary(train)
df <-data.frame(Q1=c(train$Gender))
df %>% count(Q1)
#another way of doing calculation
male <- subset(train, Gender=="Male")
precentage_male = nrow(male)/nrow(train)
precentage_male
setwd("~/Desktop/OPIM BA&QM/R_file/Assignment 2")
